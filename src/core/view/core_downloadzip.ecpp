<#
Copyright (C) 2013-2014  Olaf Radicke <briefkasten@olaf-rdicke.de>

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU Affero General Public License as published by
the Free Software Foundation, either version 3 of the License, or later
version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Affero General Public License for more details.

You should have received a copy of the GNU Affero General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
#>

<%session
    scope="shared"
    include="fstream"
    include="core/model/TntWebWizardException.h"
    include="core/model/UserSession.h"
    include="core/model/ProjectData.h"
    include="core/model/MakefileData.h"
    include="formtoken/manager/manager.h">
        Tww::Core::UserSession userSession(
            FormToken::Manager::getRawToken( request )
        );
        Tww::Core::ProjectData projectData();
        Tww::Core::MakefileData makefileData();
</%session>
<%request
    include="core/controller/DownloadZipController.h">
        Tww::Core::DownloadZipController
            downloadZipController(
                userSession,
                projectData,
                makefileData
            );
</%request>
<%pre>
    #include <routereverse/manager/manager.h>
    #include <fstream>
    #include <tnt/mimedb.h>
</%pre>
<%cpp>

    downloadZipController.worker(
        request,
        reply,
        qparam
    );

    std::ifstream in( downloadZipController.getZipPath().c_str() );
    if (!in) {
        std::ostringstream errorText;
        errorText
            << "Can not read file \""
            << downloadZipController.getZipPath()
            << "\". Abort..."
        ;
        throw Tww::Core::TntWebWizardException( errorText.str() );
    }

    tnt::MimeDb mimeDb("/etc/mime.types");
    reply.setContentType(
        mimeDb.getMimetype(
            downloadZipController.getZipPath()
        )
    );

    reply.out() << in.rdbuf();  // send the content of the ifstream to the page
    downloadZipController.cleanUp();
</%cpp>
