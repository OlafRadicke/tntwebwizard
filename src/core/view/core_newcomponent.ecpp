<#
Copyright (C) 2013-2014  Olaf Radicke <briefkasten@olaf-rdicke.de>

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU Affero General Public License as published by
the Free Software Foundation, either version 3 of the License, or later
version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Affero General Public License for more details.

You should have received a copy of the GNU Affero General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
#>

<%session
    scope="shared"
    include="core/model/UserSession.h"
    include="core/model/ProjectData.h"
    include="core/model/MakefileData.h"
    include="core/model/NewModelData.h"
    include="core/model/NewViewData.h"
    include="formtoken/manager/manager.h">
        Tww::Core::UserSession userSession(
            FormToken::Manager::getRawToken( request )
        );
        Tww::Core::ProjectData projectData();
        Tww::Core::MakefileData makefileData();
        Tww::Core::NewModelData newModelData(
                userSession,
                projectData,
                makefileData
        );
        Tww::Core::NewViewData newViewData(
                userSession,
                projectData,
                makefileData
        );
</%session>
<%request
    include="core/controller/NewComponentController.h" >
        Tww::Core::NewComponentController
            controller(
                userSession,
                projectData,
                makefileData,
                newModelData,
                newViewData
            );
</%request>
<%pre>
    #include <routereverse/manager/manager.h>
</%pre>
<%cpp>

    controller.worker(
        request,
        reply,
        qparam
    );
</%cpp>
<!DOCTYPE HTML>
<html>
<head>
    <title>TNT-WEB-WIZARD - NEW COMPONENT</title>
    <& core_part_head qparam >
</head>
<body>

    <& core_part_title qparam >
    <& core_part_menu qparam >

    <div id="content">
        <%include>core/view/core_part_feedbackbox.eccp</%include>
        <form method="post">
            <fieldset>
                <legend>BASIC COMPONENT DATA</legend>
                    <div class="form_labels">
                        <label from="namespace">Namespace:</label>
                    </div>
                    <div class="form_inputs">
                        <input
                            id="namespace"
                            name="form_namespace"
                            type="text"
                            size="30"
                            maxlength="30"
                            value="<$ controller.getNameSpace() $>">
                    </div>
            </fieldset>

            <fieldset>
                <legend>VIEW</legend>
                <div class="form_labels">
                    <label from="ecppfilename">ecpp filename:</label>
                </div>
                <div class="form_inputs">
                    <input
                        id="ecppfilename"
                        name="form_ecppfilename"
                        type="text"
                        size="30"
                        maxlength="30"
                        value="<$ controller.getEcppFileName() $>">
                </div>

<!-- web form support -->
                <div class="form_labels">
                    <label from="webform_support">Create web form:</label>
                </div>
                <div class="form_inputs">
                    <input
                        type="checkbox"
                        id="webform_support"
                        value="true"
                        name="form_webform_support"
%     if ( newViewData.isFormSupport() ) {
                        checked >
%     } else {
                        >
%     }
                </div>

            </fieldset>

            <fieldset>
                <legend>CONTROLLER</legend>
                <div class="form_labels">
                    <label from="controllername">Controller class name:</label>
                </div>
                <div class="form_inputs">
                    <input
                        id="controllername"
                        name="form_controllername"
                        type="text"
                        size="30"
                        maxlength="30"
                        value="<$ controller.getControllerName() $>">
                </div>
            </fieldset>

            <fieldset>
                <legend>MODEL</legend>

                <div class="form_labels">
                    <label from="modelname">Model name:</label>
                </div>
                <div class="form_inputs">
                    <input
                        id="modelname"
                        name="form_modelname"
                        type="text"
                        size="30"
                        maxlength="30"
                        value="<$ newModelData.getName() $>">
                </div>

<!-- property_type -->
                <div class="form_labels">
                    <label from="property_list">Property:</label>
                    <br>
                    <ul id="property_list">
% std::vector<std::string> allProperties = newModelData.getPropertyList();
% for (unsigned int i=0; i<allProperties.size() ; i++) {
                            <li><$  allProperties[i] $></li>
% }
                    <ul>
                </div>

                <div class="form_inputs">
                    <input
                        id="property_name"
                        name="form_property_name"
                        type="text"
                        size="30"
                        maxlength="30">
                    <select
                        id="property_type"
                        name="form_property_type">
                        <option value="int">int</option>
                        <option value="bool">bool</option>
                        <option value="float">float</option>
                        <option value="long int">long int</option>
                        <option value="unsigned int">unsigned int</option>
                        <option value="cxxtools::String">cxxtools::String</option>
                        <option value="std::list">std::list</option>
                        <option value="std::map">std::map</option>
                        <option value="std::string">std::string</option>
                        <option value="std::stringstream">std::stringstream</option>
                        <option value="std::vector">std::vector</option>
                    </select>

                    <button
                        name="form_add_property"
                        type="submit"
                        value="form_add_property" >Add property</button>
                </div>

<!-- getter_functions -->
                <div class="form_labels">
                    <label from="getter_functions">Create getter functions:</label>
                </div>
                <div class="form_inputs">
                    <input
                        type="checkbox"
                        id="getter_functions"
                        value="true"
                        name="form_getter_functions"
%     if ( newModelData.isGetterFunctions() ) {
                        checked >
%     } else {
                        >
%     }
                </div>

<!-- setter_functions -->
                <div class="form_labels">
                    <label from="setter_functions">Create setter functions:</label>
                </div>
                <div class="form_inputs">
                    <input
                        type="checkbox"
                        id="setter_functions"
                        value="true"
                        name="form_setter_functions"
%     if ( newModelData.isSetterFunctions() ) {
                        checked >
%     } else {
                        >
%     }
                </div>

<!-- constructor -->
                <div class="form_labels">
                    <label from="constructor">Create constructor:</label>
                </div>
                <div class="form_inputs">
                    <input
                        type="checkbox"
                        id="constructor"
                        value="true"
                        name="form_constructor"
%     if ( newModelData.isConstructor() ) {
                        checked >
%     } else {
                        >
%     }
                </div>

<!-- destructor -->
                <div class="form_labels">
                    <label from="destructor">Create destructor:</label>
                </div>
                <div class="form_inputs">
                    <input
                        type="checkbox"
                        id="destructor"
                        value="true"
                        name="form_destructor"
%     if ( newModelData.isDestructor() ) {
                        checked >
%     } else {
                        >
%     }
                </div>

<!-- json serialization -->
                <div class="form_labels">
                    <label from="json_serialization">Add json serialization support:</label>
                </div>
                <div class="form_inputs">
                    <input
                        type="checkbox"
                        id="json_serialization"
                        value="true"
                        name="form_json_serialization"
%     if ( newModelData.isJsonSerializationSupported() ) {
                        checked >
%     } else {
                        >
%     }
                </div>


<!-- xml serialization -->
                <div class="form_labels">
                    <label from="xml_serialization">Add xml serialization support:</label>
                </div>
                <div class="form_inputs">
                    <input
                        type="checkbox"
                        id="xml_serialization"
                        value="true"
                        name="form_xml_serialization"
%     if ( newModelData.isXmlSerializationSupported() ) {
                        checked >
%     } else {
                        >
%     }
                </div>
            </fieldset>

            <div class="form_labels">
                <label></label>
            </div>
            <div class="form_inputs">
                <button
                    name="form_create_button"
                    type="submit"
                    value="form_create_button" >Create component</button>
            </div>

        </form>
    </div>

</body>
</html>
